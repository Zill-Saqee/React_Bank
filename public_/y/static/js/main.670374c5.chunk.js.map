{"version":3,"sources":["components/icon.ico","components/Header.js","components/Dashboard.js","components/Accounts.js","components/Transactions.js","components/Create.js","components/Detail.js","components/Tdetail.js","components/withdraw.js","components/deposit.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Link","to","Component","Dashboard","arr1","localStorage","getItem","this","setState","totalaccnts","JSON","parse","length","arr2","ttransactions","src","icon","alt","align","state","Accounts","accdetails","update","id","alert","checkls","arr","array","_this","table","sendID","i","ID","setItem","d","rqdata","filter","item","reqdata","stringify","arrayofacnts","_this2","image","height","cellSpacing","style","textAlign","fontFamily","color","map","index","key","onClick","name","time","type","amount","Transactions","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Number","heading","tarray","h","ticon","acc","Create","acId","handletransaction","tArray","t","Transaction","push","updatedArray","handleaccount","refs","value","Date","toLocaleString","random","Math","round","user","User","accounts","n","acno","ttime","placeholder","ref","required","Detail","data","route","reqData","innerHTML","r","b","delete","window","confirm","reqIndex","accArray","splice","removeItem","colSpan","Tdetail","Withdraw","withdraw","bind","assertThisInitialized","getdetail","iid","indexinacc","withdrawn","detail","nn","updatedamount","ddd","updatedarray","Deposit","deposit","add","validity","rangeUnderflow","uamount","min","Footer","App","BrowserRouter","components_Header","Route","exact","path","component","components_Footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oRCkBzBC,mLAbX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACTH,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,cACLL,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAT,aACLL,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,iBAAT,0BARAC,8BC2DNC,+LAzDX,IAAIC,EAAOC,aAAaC,QAAQ,YAChC,GAAa,OAATF,EACFG,KAAKC,SAAS,CAAEC,YAAa,QACxB,CACL,IACIA,EADeC,KAAKC,MAAMP,GACCQ,OAC/BL,KAAKC,SAAS,CAAEC,YAAaA,IAE/B,IAAII,EAAOR,aAAaC,QAAQ,gBAChC,GAAa,OAATO,EACFN,KAAKC,SAAS,CAAEM,cAAe,QAC1B,CACL,IACIA,EADeJ,KAAKC,MAAME,GACGD,OACjCL,KAAKC,SAAS,CAAEM,cAAeA,sCAKjC,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQgB,IAAKC,IAAMC,IAAI,KACtCrB,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,qBAAT,oBACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAT,cAGJL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKoB,MAAM,SAASnB,UAAU,UAC5BH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,cAAcM,KAAKY,MAAMV,aAClCb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,cAAT,cAGJL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQgB,IAAKC,IAAMC,IAAI,KACtCrB,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,kBAAT,cAGJL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKoB,MAAM,SAASnB,UAAU,UAC5BH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,kBAAkBM,KAAKY,MAAML,eACtClB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,kBAAT,0BAnDYC,aC6ETkB,6MA1EXD,MAAM,CAACE,WAAW,MAEpBC,OAAO,SAACC,GAAQC,MAAMD,MAmBpBE,QAAQ,WAEJ,IAAIC,EAAWC,EAAM,GAEb,OADRD,EAAIrB,aAAaC,QAAQ,cAGrBsB,EAAKpB,SAAS,CAACa,WAAW,KAC1BO,EAAKpB,SAAS,CAACqB,OAAM,MAKrBF,EAAMjB,KAAKC,MAAMe,GACjBE,EAAKpB,SAAS,CAACa,WAAWM,IAC1BC,EAAKpB,SAAS,CAACqB,OAAM,QAK3BC,OAAS,SAACP,EAAGQ,GACX,IAAIC,EAAGT,EACPlB,aAAa4B,QAAQ,KAAMF,GAC3B,IAAIG,EAAE7B,aAAaC,QAAQ,YAEvB6B,EADKzB,KAAKC,MAAMuB,GACJE,OAAO,SAASC,GAC7B,OAAOA,EAAKd,KAAKS,IAEhBM,EAAQ5B,KAAK6B,UAAUJ,GAC3B9B,aAAa4B,QAAQ,SAASK,wFA3ChC,IAAIZ,EAAIrB,aAAaC,QAAQ,YACzBqB,EAAMjB,KAAKC,MAAMe,GACrB,GAAGC,IAAQ,IAAc,OAARA,EAEPpB,KAAKC,SAAS,CAACgC,aAAa,IAC5BjC,KAAKC,SAAS,CAACqB,OAAM,QAG/B,CACE,IACIpB,EADaC,KAAKC,MAAMe,GACCd,OAC7BL,KAAKC,SAAS,CAACC,YAAYA,IAC3BF,KAAKkB,4CAkCF,IAAAgB,EAAAlC,KACP,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACTH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,SAASE,GAAG,KAA5B,qBACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,SAASE,GAAG,oBAA5B,oBACAL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKiB,IAAK2B,IAAOC,OAAO,MAAM1B,IAAI,KAAKrB,EAAAC,EAAAC,cAAA,yBAK3CF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAW6C,YAAY,QAChB,IAAnBrC,KAAKY,MAAMU,MAAgBjC,EAAAC,EAAAC,cAAA,MAAI+C,MAAO,CAACC,UAAU,SAASC,WAAW,aAAaC,MAAM,SAA7D,6CAAuHpD,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBAAkBF,EAAAC,EAAAC,cAAA,kBAAaF,EAAAC,EAAAC,cAAA,wBAAmBF,EAAAC,EAAAC,cAAA,0BAAqBF,EAAAC,EAAAC,cAAA,uBACrOF,EAAAC,EAAAC,cAAA,aAC2B,IAA1BS,KAAKY,MAAMqB,aAAmB,GAAIjC,KAAKY,MAAME,WAAW4B,IAAM,SAACZ,EAAKa,GAAW,OAAQtD,EAAAC,EAAAC,cAAA,MAAIqD,IAAKD,GAAOtD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,mBAAoBmD,QAAS,kBAAKX,EAAKX,OAAOO,EAAKd,GAAG2B,KAAUb,EAAKd,KAAe3B,EAAAC,EAAAC,cAAA,UAAKuC,EAAKgB,MAAUzD,EAAAC,EAAAC,cAAA,UAAKuC,EAAKiB,MAAU1D,EAAAC,EAAAC,cAAA,UAAKuC,EAAKkB,MAAU3D,EAAAC,EAAAC,cAAA,UAAKuC,EAAKmB,qBApEzQtD,aCoDRuD,cAnDb,SAAAA,EAAYC,GACN,IAAA9B,EAAA+B,OAAAC,EAAA,EAAAD,CAAApD,KAAAkD,IACE7B,EAAA+B,OAAAE,EAAA,EAAAF,CAAApD,KAAAoD,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAxD,KAAMmD,KAgBR5B,OAAS,SAACP,EAAGQ,GACX,IAAIC,EAAGT,EACPlB,aAAa4B,QAAQ,KAAMF,GAC3B,IAAIG,EAAE7B,aAAaC,QAAQ,gBAEvB6B,EADKzB,KAAKC,MAAMuB,GACJE,OAAO,SAASC,GAC7B,OAAO2B,OAAO3B,EAAKd,MAAMyC,OAAOhC,KAE/BM,EAAQ5B,KAAK6B,UAAUJ,GAC3B9B,aAAa4B,QAAQ,SAASK,IAxB9B,IAAIZ,EAAIrB,aAAaC,QAAQ,gBAE7B,GAAW,OADDI,KAAKC,MAAMe,GAGjBE,EAAKT,MAAM,CAAC8C,SAAQ,OAGtB,CACErC,EAAKT,MAAM,CAAC8C,SAAQ,GACpB,IAAIvC,EAAIrB,aAAaC,QAAQ,gBACzB4D,EAAOxD,KAAKC,MAAMe,GACtBE,EAAKT,MAAM,CAACQ,MAAMuC,GAbxB,OAAAtC,wEA6BG,IAAAa,EAAAlC,KACD4D,EAAEvE,EAAAC,EAAAC,cAAA,MAAI+C,MAAO,CAACC,UAAU,SAASC,WAAW,aAAaC,MAAM,SAA7D,sCAER,OACEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACTH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,cAAcE,GAAG,KAAjC,qBACAL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKiB,IAAKqD,IAAOzB,OAAO,MAAM1B,IAAI,KAClCrB,EAAAC,EAAAC,cAAA,6BAEJF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAW6C,YAAY,QACb,IAArBrC,KAAKY,MAAM8C,QAAmBE,EAAIvE,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,2BAAsBF,EAAAC,EAAAC,cAAA,kBAAaF,EAAAC,EAAAC,cAAA,sBAAiBF,EAAAC,EAAAC,cAAA,0BAAqBF,EAAAC,EAAAC,cAAA,sBACxHF,EAAAC,EAAAC,cAAA,cACuB,IAAtBS,KAAKY,MAAM8C,QAAmB,GAAK1D,KAAKY,MAAMQ,MAAMsB,IAAM,SAACZ,EAAKa,GAAW,OAAQtD,EAAAC,EAAAC,cAAA,MAAIqD,IAAKD,GAAOtD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,uBAAwBmD,QAAS,kBAAKX,EAAKX,OAAOO,EAAKd,GAAG2B,KAAUb,EAAKd,KAAe3B,EAAAC,EAAAC,cAAA,UAAKuC,EAAKiB,MAAU1D,EAAAC,EAAAC,cAAA,UAAKuC,EAAKgC,KAASzE,EAAAC,EAAAC,cAAA,UAAKuC,EAAKkB,MAAU3D,EAAAC,EAAAC,cAAA,UAAKuC,EAAKmB,qBA5CpQtD,aCyGZoE,6MAxGTnD,MAAM,CAAEoD,KAAK,GAAGf,OAAO,MAqB3BgB,kBAAkB,SAACjD,EAAGiC,GAEhB,IAAIiB,EAAO,GACPC,EAAE,IAAI9C,EAAK+C,YAAYpD,EAAG,SAASiC,GACnC9B,EAAIrB,aAAaC,QAAQ,gBAE7B,GAAW,OADDI,KAAKC,MAAMe,GAEnB,CACG+C,EAAOG,KAAKF,GACZ,IAAIG,EAAanE,KAAK6B,UAAUkC,GAChCpE,aAAa4B,QAAQ,eAAe4C,OAGvC,CACI,IAAInD,EAAIrB,aAAaC,QAAQ,gBACzBqB,EAAMjB,KAAKC,MAAMe,GACrBC,EAAMiD,KAAKF,GACX,IAAID,EAAO/D,KAAK6B,UAAUZ,GAC1BtB,aAAa4B,QAAQ,eAAewC,OAIhDK,cAAc,WACZ,IAAIzB,EAAKzB,EAAKmD,KAAK1B,KAAK2B,MACpBzB,EAAK3B,EAAKmD,KAAKxB,KAAKyB,MACpBxB,EAAO5B,EAAKmD,KAAKvB,OAAOwB,MAExB1B,GADE,IAAI2B,MACCC,iBACPC,EAAqB,KAAdC,KAAKD,SACZ5D,EAAG6D,KAAKC,MAAMF,GAClB,GAAW,KAAP9B,GAAmB,KAAPE,GAAqB,KAATC,EAExBhC,MAAM,2BAGR,CAGE,IAAI8D,EAAK,IAAI1D,EAAK2D,KAAKhE,EAAG8B,EAAKE,EAAKC,EAAOF,GAC3C,GAAsC,OAAnCjD,aAAaC,QAAQ,YACtB,CACE,IAAIoB,EAAI,GACRA,EAAIkD,KAAKU,GACT,IAAIE,EAAS9E,KAAK6B,UAAUb,GAC5BrB,aAAa4B,QAAQ,WAAWuD,GAChC5D,EAAK4C,kBAAkBjD,EAAGiC,OAG1B,CACE,IAAI9B,EAAWC,EAAM,GACrBD,EAAIrB,aAAaC,QAAQ,aACzBqB,EAAMjB,KAAKC,MAAMe,IACXkD,KAAKU,GACX,IAAIE,EAAS9E,KAAK6B,UAAUZ,GAC5BtB,aAAa4B,QAAQ,WAAWuD,GAChC5D,EAAK4C,kBAAkBjD,EAAGiC,0EA3EhCjC,EAAGkE,EAAEf,EAAE7E,EAAEyD,GAEL/C,KAAKgB,GAAGA,EACRhB,KAAK8C,KAAKoC,EACVlF,KAAKgD,KAAKmB,EACVnE,KAAKiD,OAAO3D,EACZU,KAAK+C,KAAKA,sCAGJoC,EAAKnC,EAAKC,GAEhB,IAAI2B,EAAqB,KAAdC,KAAKD,SAChB5E,KAAKgB,GAAG6D,KAAKC,MAAMF,GACf,IACIQ,GADE,IAAIV,MACEC,iBAChB3E,KAAK+C,KAAKqC,EACVpF,KAAK8D,IAAIqB,EACTnF,KAAKgD,KAAKA,EACVhD,KAAKiD,OAAOA,mCAgEpB,OACE5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACTH,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,yBAAsBF,EAAAC,EAAAC,cAAA,SAAQyD,KAAK,OAAOqC,YAAY,uBAAuBC,IAAI,OAAOC,UAAQ,IAAElG,EAAAC,EAAAC,cAAA,WAClGF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAQ+F,IAAI,QACRjG,EAAAC,EAAAC,cAAA,UAAQkF,MAAM,IAAd,uBACApF,EAAAC,EAAAC,cAAA,UAAQkF,MAAM,WAAd,WACApF,EAAAC,EAAAC,cAAA,UAAQkF,MAAM,UAAd,WACKpF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,qCAAkCF,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,SAASqC,YAAY,OAAOC,IAAI,SAASC,UAAQ,IAASlG,EAAAC,EAAAC,cAAA,WAExGF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYmD,QAAS7C,KAAKuE,eAAnC,kBACAlF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAT,8BAnGOC,aCkFN6F,oNAhFX5E,MAAM,CAAC6E,KAAK,GAAGC,MAAM,eAMrBC,QAAQ,WAEA,IAAIhE,EAAE7B,aAAaC,QAAQ,UACvBgC,EAAQ5B,KAAKC,MAAMuB,GACvBN,EAAKmD,KAAKlF,EAAEsG,UAAU7D,EAAQ,GAAGf,GACjCK,EAAKmD,KAAKU,EAAEU,UAAU7D,EAAQ,GAAGe,KACjCzB,EAAKmD,KAAKqB,EAAED,UAAU7D,EAAQ,GAAGgB,KACjC1B,EAAKmD,KAAKL,EAAEyB,UAAU7D,EAAQ,GAAGiB,KACjC3B,EAAKmD,KAAKsB,EAAEF,UAAU7D,EAAQ,GAAGkB,UAGvC8C,OAAO,WAGG,IAAmB,IADFC,OAAOC,QAAQ,wCAE5B,CACI,IAAIC,EAAS/F,KAAKC,MAAMN,aAAaC,QAAQ,OACzCoG,EAAShG,KAAKC,MAAMN,aAAaC,QAAQ,aAE7C,GADAoG,EAASC,OAAOF,EAAS,GACtBC,EAAS9F,OAAO,EACf,CACI,IAAIiE,EAAanE,KAAK6B,UAAUmE,GAChCrG,aAAa4B,QAAQ,WAAW4C,QAIpCxE,aAAauG,WAAW,YACxBvG,aAAauG,WAAW,UACxBvG,aAAauG,WAAW,MAE5BhF,EAAKpB,SAAS,CAACyF,MAAM,mBAIrBrE,EAAKpB,SAAS,CAACyF,MAAM,yGArCjC1F,KAAK2F,2CAyCb,OACEtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYF,UAAU,QAA/B,oBACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,SAASqD,QAAS7C,KAAK+F,OAAQrG,GAAIM,KAAKY,MAAM8E,OAA9D,mBACCrG,EAAAC,EAAAC,cAAA,4BAAsBF,EAAAC,EAAAC,cAAA,WACtBF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,YACAH,EAAAC,EAAAC,cAAA,MAAI+G,QAAQ,IAAIhE,MAAO,CAACC,UAAU,QAAS+C,IAAI,IAAI9F,UAAU,aAC5DH,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,aACAH,EAAAC,EAAAC,cAAA,MAAI+G,QAAQ,IAAIhE,MAAO,CAACC,UAAU,QAAS+C,IAAI,IAAI9F,UAAU,aAC5DH,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,cACAH,EAAAC,EAAAC,cAAA,MAAI+G,QAAQ,IAAIhE,MAAO,CAACC,UAAU,QAAS+C,IAAI,IAAI9F,UAAU,aAC5DH,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAI+G,QAAQ,IAAIhE,MAAO,CAACC,UAAU,QAAS+C,IAAI,IAAI9F,UAAU,aAC5DH,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBACAH,EAAAC,EAAAC,cAAA,MAAI+G,QAAQ,IAAIhE,MAAO,CAACC,UAAU,QAAS+C,IAAI,IAAI9F,UAAU,eAG9DH,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,qBAAqBF,UAAU,YAAxC,YACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,oBAAoBF,UAAU,WAAvC,mBA3ESG,cCoDN4G,6MAnDX3F,MAAM,CAAC6E,KAAK,GAAGC,MAAM,eAMrBC,QAAQ,WAEA,IAAIhE,EAAE7B,aAAaC,QAAQ,UACvBgC,EAAQ5B,KAAKC,MAAMuB,GACvBN,EAAKmD,KAAKlF,EAAEsG,UAAU7D,EAAQ,GAAG+B,IAEjCzC,EAAKmD,KAAKqB,EAAED,UAAU7D,EAAQ,GAAGgB,KACjC1B,EAAKmD,KAAKL,EAAEyB,UAAU7D,EAAQ,GAAGiB,KACjC3B,EAAKmD,KAAKsB,EAAEF,UAAU7D,EAAQ,GAAGkB,2FAXjCjD,KAAK2F,2CAeb,OACEtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,gBAAgBF,UAAU,QAAnC,wBACCH,EAAAC,EAAAC,cAAA,gCAA0BF,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,YACAH,EAAAC,EAAAC,cAAA,MAAI+G,QAAQ,IAAIhE,MAAO,CAACC,UAAU,QAAS+C,IAAI,IAAI9F,UAAU,aAC5DH,EAAAC,EAAAC,cAAA,WAKLF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,cACAH,EAAAC,EAAAC,cAAA,MAAI+G,QAAQ,IAAIhE,MAAO,CAACC,UAAU,QAAS+C,IAAI,IAAI9F,UAAU,aAC5DH,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAI+G,QAAQ,IAAIhE,MAAO,CAACC,UAAU,QAAS+C,IAAI,IAAI9F,UAAU,aAC5DH,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,UACAH,EAAAC,EAAAC,cAAA,MAAI+G,QAAQ,IAAIhE,MAAO,CAACC,UAAU,QAAS+C,IAAI,IAAI9F,UAAU,eAG9DH,EAAAC,EAAAC,cAAA,mBA9CGI,oBC+GP6G,cA9GX,SAAAA,EAAYrD,GACR,IAAA9B,EAAA+B,OAAAC,EAAA,EAAAD,CAAApD,KAAAwG,IACInF,EAAA+B,OAAAE,EAAA,EAAAF,CAAApD,KAAAoD,OAAAG,EAAA,EAAAH,CAAAoD,GAAAhD,KAAAxD,KAAMmD,KA2Bdc,kBAAkB,SAAChB,EAAOjC,GAEtB,IAAIkD,EAAO,GACPC,EAAE,IAAI9C,EAAK+C,YAAYpD,EAAG,QAAQiC,GAClC9B,EAAIrB,aAAaC,QAAQ,gBAE7B,GAAW,OADDI,KAAKC,MAAMe,GAEjB,CACA+C,EAAOG,KAAKF,GACZ,IAAIG,EAAanE,KAAK6B,UAAUkC,GAChCpE,aAAa4B,QAAQ,eAAe4C,OAGpC,CACI,IAAInD,EAAIrB,aAAaC,QAAQ,gBACzBqB,EAAMjB,KAAKC,MAAMe,GACrBC,EAAMiD,KAAKF,GACX,IAAID,EAAO/D,KAAK6B,UAAUZ,GAC1BtB,aAAa4B,QAAQ,eAAewC,KA5CxC7C,EAAKT,MAAM,CAACI,GAAG,IACfK,EAAKoF,SAASpF,EAAKoF,SAASC,KAAdtD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA/B,KACdA,EAAKuF,UAAUvF,EAAKuF,UAAUF,KAAftD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA/B,KACf,IAAIF,EAAIrB,aAAaC,QAAQ,UAEzB8G,EADM1G,KAAKC,MAAMe,GACP,GAAGH,GAPrB,OAQIK,EAAKT,MAAM,CAACI,GAAG6F,GARnBxF,2EAYA,IAAIsB,EAAM7C,aAAaC,QAAQ,MAE/B,OADMI,KAAKC,MAAMuC,uCAITwC,EAAKnC,EAAKC,GAEhB,IAAI2B,EAAqB,KAAdC,KAAKD,SAChB5E,KAAKgB,GAAG6D,KAAKC,MAAMF,GACf,IACIQ,GADE,IAAIV,MACEC,iBAChB3E,KAAK+C,KAAKqC,EACVpF,KAAK8D,IAAIqB,EACTnF,KAAKgD,KAAKA,EACVhD,KAAKiD,OAAOA,qCA0Bd,IAAI6D,EAAW9G,KAAK4G,YAChBG,EAAU/G,KAAKwE,KAAKvB,OAAOwB,MAC/B,GAAuB,IAApBhB,OAAOsD,IAAkBA,EAAU,EAE9B9F,MAAM,qCAGV,CAEI,IAAIU,EAAE7B,aAAaC,QAAQ,UACvBiH,EAAO7G,KAAKC,MAAMuB,GAClBsF,EAAGD,EAAO,GAAG/D,OACjB,GAAGQ,OAAOwD,GAAIF,EAEN9F,MAAM,iDAGV,CACI,IAAIiG,EAAcF,EAAO,GAAG/D,OAAO8D,EACnC,GAAGG,EAAc,IAETjG,MAAM,yDAGf,CACK+F,EAAO,GAAG/D,OAAOiE,EACjBpH,aAAa4B,QAAQ,SAAUvB,KAAK6B,UAAUgF,IAC9C,IAAI7F,EAAIrB,aAAaC,QAAQ,YACzBqB,EAAMjB,KAAKC,MAAMe,GACjBgG,EAAIH,EAAO,GACf5F,EAAMgF,OAAOU,EAAW,EAAEK,GAC1B,IAAIC,EAAajH,KAAK6B,UAAUZ,GAChCtB,aAAa4B,QAAQ,WAAW0F,GAEhCpH,KAAKiE,kBAAkB8C,EAAU/G,KAAKY,MAAMI,wCAOpE,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,mCACLF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,SAASsC,IAAI,WAAWjG,EAAAC,EAAAC,cAAA,WACpCF,EAAAC,EAAAC,cAAA,2BAAkBF,EAAAC,EAAAC,cAAA,yBAAlB,KACAF,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,OAAOqC,YAAY,+BAA+BhG,EAAAC,EAAAC,cAAA,WAC7DF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,mBAAmBF,UAAU,QAAQqD,QAAS7C,KAAKyG,UAA5D,YACApH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,mBAAmBF,UAAU,OAAtC,mBAxGOG,aCuGR0H,cAtGX,SAAAA,EAAYlE,GAAM,IAAA9B,EAAA+B,OAAAC,EAAA,EAAAD,CAAApD,KAAAqH,IAAEhG,EAAA+B,OAAAE,EAAA,EAAAF,CAAApD,KAAAoD,OAAAG,EAAA,EAAAH,CAAAiE,GAAA7D,KAAAxD,KAAMmD,KAS1BvC,MAAM,CAACI,GAAG,GATQK,EA8BlB4C,kBAAkB,SAAChB,EAAOjC,GAExB,IAAIkD,EAAO,GACPC,EAAE,IAAI9C,EAAK+C,YAAYpD,EAAG,SAASiC,GACnC9B,EAAIrB,aAAaC,QAAQ,gBAE7B,GAAW,OADDI,KAAKC,MAAMe,GAEnB,CACG+C,EAAOG,KAAKF,GACZ,IAAIG,EAAanE,KAAK6B,UAAUkC,GAChCpE,aAAa4B,QAAQ,eAAe4C,OAGvC,CACI,IAAInD,EAAIrB,aAAaC,QAAQ,gBACzBqB,EAAMjB,KAAKC,MAAMe,GACrBC,EAAMiD,KAAKF,GACX,IAAID,EAAO/D,KAAK6B,UAAUZ,GAC1BtB,aAAa4B,QAAQ,eAAewC,KA/CxC7C,EAAKuF,UAAUvF,EAAKuF,UAAUF,KAAftD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA/B,KACf,IAAIF,EAAIrB,aAAaC,QAAQ,UAExB8G,EADK1G,KAAKC,MAAMe,GACN,GAAGH,GAJJ,OAKbK,EAAKT,MAAM,CAACI,GAAG6F,GACfxF,EAAKiG,QAAQjG,EAAKiG,QAAQZ,KAAbtD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA/B,KANAA,2EAUN8D,EAAKnC,EAAKC,GAEhB,IAAI2B,EAAqB,KAAdC,KAAKD,SAChB5E,KAAKgB,GAAG6D,KAAKC,MAAMF,GACf,IACIQ,GADE,IAAIV,MACEC,iBAChB3E,KAAK+C,KAAKqC,EACVpF,KAAK8D,IAAIqB,EACTnF,KAAKgD,KAAKA,EACVhD,KAAKiD,OAAOA,sCAKd,IAAIN,EAAM7C,aAAaC,QAAQ,MAE/B,OADMI,KAAKC,MAAMuC,qCA6BL,IAAImE,EAAW9G,KAAK4G,YAChBW,EAAIvH,KAAKwE,KAAK8C,QAAQ7C,MAC1B,GAAG8C,EAAI,GAAW,IAANA,EAEJ,GAAIvH,KAAKwE,KAAK8C,QAAQE,SAASC,eAC3BxG,MAAM,oCAGT,CACI,IAAIU,EAAE7B,aAAaC,QAAQ,UACvB0F,EAAKtF,KAAKC,MAAMuB,GAChBrC,EAAEmG,EAAK,GAAGxC,OACVyE,EAAQjE,OAAOnE,GAAKmE,OAAO8D,GAChC9B,EAAK,GAAGxC,OAAOyE,EACf5H,aAAa4B,QAAQ,SAAUvB,KAAK6B,UAAUyD,IAC9C,IAAItE,EAAIrB,aAAaC,QAAQ,YACzBqB,EAAMjB,KAAKC,MAAMe,GACjBgG,EAAI1B,EAAK,GACbrE,EAAMgF,OAAOU,EAAW,EAAEK,GAC1B,IAAIC,EAAajH,KAAK6B,UAAUZ,GAChCtB,aAAa4B,QAAQ,WAAW0F,GAChCpH,KAAKiE,kBAAkBR,OAAO8D,GAAKvH,KAAKY,MAAMI,SAKlDC,MAAM,4DAM9B,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,kCACLF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,SAAS2E,IAAI,IAAIrC,IAAI,YAAWjG,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,2BAAkBF,EAAAC,EAAAC,cAAA,yBAAlB,KACAF,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,OAAOqC,YAAY,+BAA+BhG,EAAAC,EAAAC,cAAA,WAC9DF,EAAAC,EAAAC,cAAA,YACKF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,mBAAmBF,UAAU,QAAQqD,QAAS7C,KAAKsH,SAA5D,WACAjI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,mBAAmBF,UAAU,OAAtC,mBAhGMG,aCQPiI,mLARX,OACEvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVH,EAAAC,EAAAC,cAAA,8DAJUI,aCiCNkI,0LAnBX,OACExI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACIzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACwI,EAAD,MACA1I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvI,IACjCP,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWtH,IACzCxB,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAW3C,IAChDnG,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBC,UAAW5B,IACpDlH,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,UAAW3B,IAClDnH,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWd,IACjDhI,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAWpE,IAChD1E,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWjF,IAC7C7D,EAAAC,EAAAC,cAAC6I,EAAD,eAdIzI,cCFZ0I,EAAcC,QACW,cAA7BtC,OAAOuC,SAASC,UAEe,UAA7BxC,OAAOuC,SAASC,UAEhBxC,OAAOuC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvI,QACfiI,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,gHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAOzK,EAAAC,EAAAC,cAACwK,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,GAAwBnE,OAAOuC,SAAS6B,MACpDC,SAAWrE,OAAOuC,SAAS8B,OAIvC,OAGFrE,OAAOsE,iBAAiB,OAAQ,WAC9B,IAAM3B,EAAK,GAAA4B,OAAMJ,GAAN,sBAEP9B,GAgEV,SAAiCM,EAAOC,GAEtC4B,MAAM7B,GACHK,KAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CjC,UAAUC,cAAciC,MAAM/B,KAAK,SAAAC,GACjCA,EAAa+B,aAAahC,KAAK,WAC7BhD,OAAOuC,SAAS0C,aAKpBvC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFA0B,CAAwBvC,EAAOC,GAI/BC,UAAUC,cAAciC,MAAM/B,KAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.670374c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.12e3dac8.ico\";","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n            <p>Bank</p>\n            <ul>\n                <li> <Link to=\"/\">Dashboard</Link></li>\n                <li> <Link to=\"/accounts\">Accounts</Link></li>\n                <li> <Link to=\"/transactions\">Transactions</Link></li>\n            </ul>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport icon from \"./icon.ico\";\nclass Dashboard extends Component {\n  componentWillMount() {\n    let arr1 = localStorage.getItem(\"accounts\");\n    if (arr1 === null) {\n      this.setState({ totalaccnts: 0 });\n    } else {\n      let arrayofacnts = JSON.parse(arr1);\n      let totalaccnts = arrayofacnts.length;\n      this.setState({ totalaccnts: totalaccnts });\n    }\n    let arr2 = localStorage.getItem(\"transactions\");\n    if (arr2 === null) {\n      this.setState({ ttransactions: 0 });\n    } else {\n      let arrayoftrans = JSON.parse(arr2);\n      let ttransactions = arrayoftrans.length;\n      this.setState({ ttransactions: ttransactions });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <div className=\"dleft\">\n          <div className=\"top\">\n            <img className=\"dicon\" src={icon} alt=\"\" />\n            <span>Accounts</span>\n            <div className=\"dlinks\">\n              <Link to=\"./accounts/create\">+Add new account</Link>\n              <Link to=\"/accounts\">View All</Link>\n            </div>\n          </div>\n          <hr />\n          <div align=\"center\" className=\"bottom\">\n            <Link to=\"./accounts\">{this.state.totalaccnts}</Link>\n            <br />\n            <Link to=\"./accounts\">accounts</Link>\n          </div>\n        </div>\n        <div className=\"dright\">\n          <div className=\"top\">\n            <img className=\"dicon\" src={icon} alt=\"\" />\n            <span>Transactions</span>\n            <div className=\"dlinks\">\n              <Link to=\"./transactions\">View All</Link>\n            </div>\n          </div>\n          <hr />\n          <div align=\"center\" className=\"bottom\">\n            <Link to=\"./transactions\">{this.state.ttransactions}</Link>\n            <br />\n            <Link to=\"./transactions\">transactions</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport image from './icon.ico';\n\nclass Accounts extends Component {\n\n    state={accdetails:\"\"};\n\n  update=(id)=>{  alert(id); }\n\n  componentWillMount()\n    { \n      let arr=localStorage.getItem(\"accounts\");\n      let array=JSON.parse(arr);\n      if(array===[] || array===null)\n            {\n                this.setState({arrayofacnts:0});\n                this.setState({table:false});\n            }\n      else\n      {\n        let arrayofacnts=JSON.parse(arr);\n        let totalaccnts=arrayofacnts.length;\n        this.setState({totalaccnts:totalaccnts});\n        this.checkls();\n      }\n    }\n    checkls=()=>\n      {\n        let arr=[];let array=[];\n        arr=localStorage.getItem(\"accounts\");\n        if(arr==null)\n          {\n            this.setState({accdetails:''});\n            this.setState({table:false});\n            // this.state.accdetails=\"\";\n          }\n        else \n          {\n            array=JSON.parse(arr);\n            this.setState({accdetails:array});\n            this.setState({table:true});\n            // this.state.accdetails=array;\n          }\n      }\n\n      sendID = (id,i) => {\n        let ID=id;\n        localStorage.setItem('id', i);\n        let d=localStorage.getItem(\"accounts\");\n        let data=JSON.parse(d);\n        let rqdata=data.filter(function(item){\n           return item.id===ID;\n        })\n        let reqdata=JSON.stringify(rqdata);\n        localStorage.setItem(\"detail\",reqdata);\n        \n      }\n  render() {\n    return (\n      <div className=\"accounts\">\n            <Link className=\"goback\" to='/' >Back to dashboard</Link>\n            <Link className=\"addnew\" to='/accounts/create' >+Add new account</Link>\n            <div className=\"innerdivA\">\n                <img src={image} height=\"40%\" alt=\"\" /><span>Accounts</span>\n            </div>\n            {/* <div ref=\"accdetails\">\n                {  this.state.accdetails==='' ? <h2>No Accounts</h2> : this.state.accdetails.map(  (item,index)=>{  return(<li key={index}><span>{item.id}</span><span>{item.name}</span><span>{item.type}</span><span>{item.amount}</span></li>)   })}\n            </div> */}\n            <table className=\"accTable\" cellSpacing=\"0px\">\n                {this.state.table===false ? <h2 style={{textAlign:\"center\",fontFamily:\"sans-serif\",color:\"#ccc\"}}>There are currently no accounts available</h2> : <thead><tr><th>Account #</th><th>Name</th><th>Registered</th><th>Account Type</th><th>Balance</th></tr></thead>   }\n                <tbody>\n                {this.state.arrayofacnts===0 ? \"\" :this.state.accdetails.map(  (item,index)=>{  return( <tr key={index}><td><Link to={\"/accounts/detail\"} onClick={()=> this.sendID(item.id,index) }>{item.id}</Link></td><td>{item.name}</td><td>{item.time}</td><td>{item.type}</td><td>{item.amount}</td></tr>)   })} \n                </tbody>\n            </table>\n      </div>\n    );\n  }\n}\n\nexport default Accounts;\n","import React, { Component } from 'react';\nimport ticon from \"./icon.ico\";\nimport {Link} from 'react-router-dom';\n\nclass Transactions extends Component {\n  constructor(props)\n        {\n          super(props);\n          let arr=localStorage.getItem(\"transactions\");\n          let array=JSON.parse(arr);\n          if(array===null)\n            {\n              this.state={heading:false};\n            }\n          else  \n            {\n              this.state={heading:true};\n              let arr=localStorage.getItem(\"transactions\");\n              let tarray=JSON.parse(arr);\n              this.state={array:tarray};\n            }\n        }\n\n        sendID = (id,i) => {\n          let ID=id;\n          localStorage.setItem('id', i);\n          let d=localStorage.getItem(\"transactions\");\n          let data=JSON.parse(d);\n          let rqdata=data.filter(function(item){\n             return Number(item.id)===Number(ID);\n          })\n          let reqdata=JSON.stringify(rqdata);\n          localStorage.setItem(\"detail\",reqdata);\n        }\n \n  render() {\n    const h=<h2 style={{textAlign:\"center\",fontFamily:\"sans-serif\",color:\"#ccc\" }}>No transactions have been made yet</h2>;\n    // const d=<tr key={index}><td><Link to={\"/accounts/detail\"} onClick={()=> this.sendID(item.id,index) }>{item.id}</Link></td><td>{item.time}</td><td>{item.acc}</td><td>{item.type}</td><td>{item.amount}</td></tr>\n    return (\n      <div className=\"transactions\">\n            <Link className=\"gobackfromt\" to='/' >Back to dashboard</Link>\n            <div className=\"innerdivT\">\n                <img src={ticon} height=\"40%\" alt=\"\" />\n                <span>Transactions</span>\n            </div>\n            <table className=\"accTable\" cellSpacing=\"0px\">\n                { this.state.heading===false  ? h : <thead><tr><th>TransactionId</th><th>Time</th><th>Account#</th><th>Account Type</th><th>Amount</th></tr></thead>   }\n                <tbody>\n                {this.state.heading=== false ? \"\" : this.state.array.map(  (item,index)=>{  return (<tr key={index}><td><Link to={\"/transactions/detail\"} onClick={()=> this.sendID(item.id,index) }>{item.id}</Link></td><td>{item.time}</td><td>{item.acc}</td><td>{item.type}</td><td>{item.amount}</td></tr>)   })} \n                </tbody>\n            </table>\n      </div>\n    );\n  }\n}\n\nexport default Transactions;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Create extends Component {\n\n      state={ acId:\"\",amount:\"\" }\n   User(id,n,t,a,time) \n      {\n            this.id=id;\n            this.name=n;\n            this.type=t;\n            this.amount=a;\n            this.time=time;\n      }\n\n      Transaction(acno,type,amount) \n      {\n            let random=Math.random()*10000000000;\n            this.id=Math.round(random);\n                let t=new Date();\n                let ttime=t.toLocaleString();\n            this.time=ttime;\n            this.acc=acno;\n            this.type=type;\n            this.amount=amount;\n      }    \n  handletransaction=(id,amount)=>\n      {\n        let tArray=[];\n        let t=new this.Transaction(id,\"credit\",amount);\n        let arr=localStorage.getItem(\"transactions\");\n        let array=JSON.parse(arr);\n        if(array===null)\n          {\n             tArray.push(t);\n             let updatedArray=JSON.stringify(tArray);\n             localStorage.setItem(\"transactions\",updatedArray);\n          }\n        else \n          {\n              let arr=localStorage.getItem(\"transactions\");\n              let array=JSON.parse(arr);\n              array.push(t);\n              let tArray=JSON.stringify(array);\n              localStorage.setItem(\"transactions\",tArray);\n          }\n      }\n\n  handleaccount=()=> {\n    let name=this.refs.name.value;\n    let type=this.refs.type.value;\n    let amount=this.refs.amount.value;\n    let t=new Date();\n    let time=t.toLocaleString();\n    let random=Math.random()*10000000000;\n    let id=Math.round(random);\n    if (name===''|| type===''|| amount==='')\n      {\n        alert(\"No account created.\");\n      }\n    else \n      {\n       \n        // this.id=Math.round(random);\n        let user=new this.User(id,name,type,amount,time);\n        if(localStorage.getItem(\"accounts\")===null)\n          {\n            let arr=[];\n            arr.push(user);\n            let accounts=JSON.stringify(arr);\n            localStorage.setItem(\"accounts\",accounts);\n            this.handletransaction(id,amount);\n          }\n          else \n            {\n              let arr=[];let array=[];\n              arr=localStorage.getItem(\"accounts\");\n              array=JSON.parse(arr);\n              array.push(user);\n              let accounts=JSON.stringify(array);\n              localStorage.setItem(\"accounts\",accounts);\n              this.handletransaction(id,amount);\n            }\n      }\n     \n  }  \n\n  render() {\n    return (\n      <div className=\"create\">\n            <h1>Enter account details below</h1>\n            <form>\n              <span>Full Name</span><input  type=\"text\" placeholder=\"Enter full name here\" ref=\"name\" required/><hr />\n              <span>Account Type</span>\n              <select ref=\"type\">\n                  <option value=\"\">Select Account Type</option>\n                  <option value=\"current\">Current</option>\n                  <option value=\"saving\">Saving</option>\n              </select><hr />\n              <span>Initial Deposit in Rs</span><input type=\"number\" placeholder=\"1000\" ref=\"amount\" required></input><hr />\n              {/* <input type=\"submit\" value=\"CREATE ACCOUNT\" onClick={this.name} />  */}\n              <Link to=\"/accounts\" onClick={this.handleaccount}>CREATE ACCOUNT</Link>\n              <Link to=\"/accounts\">VIEW ALL ACCOUNTS</Link>\n             </form>\n      </div>\n    );\n  }\n}\n\nexport default Create;\n","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport './detail.css';\n\nclass Detail extends Component {\n    state={data:'',route:\"/accounts\"};\n    componentDidMount()\n        {\n            this.reqData();\n           \n        }\n    reqData=()=>\n        {\n            let d=localStorage.getItem(\"detail\");\n            let reqdata=JSON.parse(d);\n            this.refs.a.innerHTML=reqdata[0].id;\n            this.refs.n.innerHTML=reqdata[0].name;\n            this.refs.r.innerHTML=reqdata[0].time;\n            this.refs.t.innerHTML=reqdata[0].type;\n            this.refs.b.innerHTML=reqdata[0].amount;\n        }\n\n      delete=()=>\n            {\n                let confirmation=window.confirm(\"Are you sure to delete your account?\");\n                if (confirmation===true)\n                    {\n                        let reqIndex=JSON.parse(localStorage.getItem(\"id\"));\n                        let accArray=JSON.parse(localStorage.getItem(\"accounts\"));\n                        accArray.splice(reqIndex,1);\n                        if(accArray.length>0)\n                            {\n                                let updatedArray=JSON.stringify(accArray);\n                                localStorage.setItem(\"accounts\",updatedArray);\n                            }\n                        else \n                        {\n                            localStorage.removeItem(\"accounts\");\n                            localStorage.removeItem(\"detail\");\n                            localStorage.removeItem(\"id\");\n                        }\n                        this.setState({route:\"/accounts\"});\n                    }\n                else    \n                    {\n                        this.setState({route:\"/accounts/detail\"});\n                    }\n            }\n  render() {\n    return (\n      <div className=\"detail\">\n          <Link to='/accounts' className=\"back\">Back to accounts</Link>\n          <Link className=\"delete\" onClick={this.delete} to={this.state.route} >Delete Accounts</Link>\n           <p> Account Detail</p><hr />\n           <table>\n               <tbody>\n                <tr>\n                    <td className=\"htd\">Account#</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"a\" className=\"dtd htd\"></td>\n                </tr><hr/>\n                <tr>\n                    <td className=\"htd\">Full Name</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"n\" className=\"dtd htd\"></td>\n                </tr><hr />\n                <tr>\n                    <td className=\"htd\">Registered</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"r\" className=\"dtd htd\"></td>\n                </tr><hr />\n                <tr>\n                    <td className=\"htd\">Account Type</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"t\" className=\"dtd htd\"></td>\n                </tr><hr />\n                <tr>\n                    <td className=\"htd\">Current Balance</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"b\" className=\"dtd htd\"></td>\n                </tr>\n                </tbody>\n           </table><br/>\n            <Link to=\"/accounts/withdraw\" className=\"withdraw\">Withdraw</Link>\n            <Link to=\"/accounts/deposit\" className=\"deposit\">Deposit</Link>\n      </div>\n    );\n  }\n}\n\nexport default Detail;\n","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport './detail.css';\n\nclass Tdetail extends Component {\n    state={data:'',route:\"/accounts\"};\n    componentDidMount()\n        {\n            this.reqData();\n           \n        }\n    reqData=()=>\n        {\n            let d=localStorage.getItem(\"detail\");\n            let reqdata=JSON.parse(d);\n            this.refs.a.innerHTML=reqdata[0].acc;\n            // this.refs.n.innerHTML=reqdata[0].name;\n            this.refs.r.innerHTML=reqdata[0].time;\n            this.refs.t.innerHTML=reqdata[0].type;\n            this.refs.b.innerHTML=reqdata[0].amount;\n        }\n\n  render() {\n    return (\n      <div className=\"detail\">\n          <Link to='/transactions' className=\"back\">Back to transactions</Link>\n           <p> Transaction Detail</p><hr />\n           <table>\n               <tbody>\n                <tr>\n                    <td className=\"htd\">Account#</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"a\" className=\"dtd htd\"></td>\n                </tr><hr/>\n                {/* <tr>\n                    <td className=\"htd\">Full Name</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"n\" className=\"dtd htd\"></td>\n                </tr><hr /> */}\n                <tr>\n                    <td className=\"htd\">Registered</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"r\" className=\"dtd htd\"></td>\n                </tr><hr />\n                <tr>\n                    <td className=\"htd\">Account Type</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"t\" className=\"dtd htd\"></td>\n                </tr><hr />\n                <tr>\n                    <td className=\"htd\">Amount</td>\n                    <td colSpan=\"4\" style={{textAlign:\"left\"}} ref=\"b\" className=\"dtd htd\"></td>\n                </tr>\n                </tbody>\n           </table><br/>\n      </div>\n    );\n  }\n}\n\nexport default Tdetail;\n","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"./detail.css\";\n\nclass Withdraw extends Component {\n    constructor(props)\n        {\n            super(props);\n            this.state={id:\"\"};\n            this.withdraw=this.withdraw.bind(this);\n            this.getdetail=this.getdetail.bind(this);\n            let arr=localStorage.getItem(\"detail\");\n            let array=JSON.parse(arr);\n            let iid=array[0].id;\n            this.state={id:iid};\n        }\n    getdetail()\n    {\n        let index=localStorage.getItem(\"id\");\n        let i=JSON.parse(index);\n        return i;\n    }  \n\n    Transaction(acno,type,amount) \n    {\n          let random=Math.random()*10000000000;\n          this.id=Math.round(random);\n              let t=new Date();\n              let ttime=t.toLocaleString();\n          this.time=ttime;\n          this.acc=acno;\n          this.type=type;\n          this.amount=amount;\n    }    \n    handletransaction=(amount,id)=>\n        {\n        let tArray=[];\n        let t=new this.Transaction(id,\"debit\",amount);\n        let arr=localStorage.getItem(\"transactions\");\n        let array=JSON.parse(arr);\n        if(array===null)\n            {\n            tArray.push(t);\n            let updatedArray=JSON.stringify(tArray);\n            localStorage.setItem(\"transactions\",updatedArray);\n            }\n        else \n            {\n                let arr=localStorage.getItem(\"transactions\");\n                let array=JSON.parse(arr);\n                array.push(t);\n                let tArray=JSON.stringify(array);\n                localStorage.setItem(\"transactions\",tArray);\n            }\n        }\n\nwithdraw()\n    {\n        let indexinacc=this.getdetail();\n        let withdrawn=this.refs.amount.value;\n        if(Number(withdrawn)===0 || withdrawn<0)\n            {\n                alert(\"You have withdrawn no amount.\");\n            }\n        else    \n            {\n\n                let d=localStorage.getItem(\"detail\");\n                let detail=JSON.parse(d);\n                let nn=detail[0].amount;\n                if(Number(nn)<withdrawn)\n                    {\n                        alert(\"You have insufficient balance to withdraw\");\n                    }\n                else\n                    {\n                        let updatedamount=detail[0].amount-withdrawn;\n                        if(updatedamount<100)\n                            {\n                                alert(\"You can't proceed.You must have 100 Rs in account\");\n                            }\n                       else\n                       {\n                            detail[0].amount=updatedamount;\n                            localStorage.setItem(\"detail\", JSON.stringify(detail));\n                            let arr=localStorage.getItem(\"accounts\");\n                            let array=JSON.parse(arr);\n                            let ddd=detail[0];\n                            array.splice(indexinacc,1,ddd);\n                            let updatedarray=JSON.stringify(array);\n                            localStorage.setItem(\"accounts\",updatedarray);\n\n                            this.handletransaction(withdrawn,this.state.id);\n                       }\n                    }\n            }\n    }\n\n  render() {\n    return (\n      <div className=\"withdraw_c\">\n           <div><p>Withdraw from account</p></div>\n           <span>Amount to Withdraw</span>\n           <input type=\"number\" ref=\"amount\" /><br />\n           <span>Description(<small>optional</small>)</span>\n           <input type=\"text\" placeholder=\"description of transaction\" /><br/>\n            <span>\n                <Link to=\"/accounts/detail\" className=\"green\" onClick={this.withdraw}>withdraw</Link>\n                <Link to=\"/accounts/detail\" className=\"red\">cancel</Link>\n            </span>\n      </div>\n    );\n  }\n}\n\nexport default Withdraw;\n","import React, { Component } from 'react';\nimport {  Link  } from \"react-router-dom\";\nimport \"./detail.css\"\n\nclass Deposit extends Component {\n    constructor(props){ super(props); \n        this.getdetail=this.getdetail.bind(this);\n        let arr=localStorage.getItem(\"detail\");\n        let array=JSON.parse(arr);\n         let iid=array[0].id;\n         this.state={id:iid};\n         this.deposit=this.deposit.bind(this);\n    }\n\n    state={id:0}\n    Transaction(acno,type,amount) \n    {\n          let random=Math.random()*10000000000;\n          this.id=Math.round(random);\n              let t=new Date();\n              let ttime=t.toLocaleString();\n          this.time=ttime;\n          this.acc=acno;\n          this.type=type;\n          this.amount=amount;\n    }    \n\n    getdetail()\n    {\n        let index=localStorage.getItem(\"id\");\n        let i=JSON.parse(index);\n        return i;\n    }  \n\n\n    handletransaction=(amount,id)=>\n    {\n      let tArray=[];\n      let t=new this.Transaction(id,\"credit\",amount);\n      let arr=localStorage.getItem(\"transactions\");\n      let array=JSON.parse(arr);\n      if(array===null)\n        {\n           tArray.push(t);\n           let updatedArray=JSON.stringify(tArray);\n           localStorage.setItem(\"transactions\",updatedArray);\n        }\n      else \n        {\n            let arr=localStorage.getItem(\"transactions\");\n            let array=JSON.parse(arr);\n            array.push(t);\n            let tArray=JSON.stringify(array);\n            localStorage.setItem(\"transactions\",tArray);\n        }\n    }\n\n    deposit()\n                {\n                    let indexinacc=this.getdetail();\n                    let add=this.refs.deposit.value;\n                    if(add>0 || add===0)\n                        {\n                            if (this.refs.deposit.validity.rangeUnderflow) {\n                                alert(\"Please enter a valid amount.\");\n                             }\n                           else\n                             {\n                                 let d=localStorage.getItem(\"detail\");\n                                 let data=JSON.parse(d);\n                                 let a=data[0].amount;\n                                 let uamount=Number(a) + Number(add);\n                                data[0].amount=uamount;\n                                localStorage.setItem(\"detail\", JSON.stringify(data));\n                                let arr=localStorage.getItem(\"accounts\");\n                                let array=JSON.parse(arr);\n                                let ddd=data[0];\n                                array.splice(indexinacc,1,ddd);\n                                let updatedarray=JSON.stringify(array);\n                                localStorage.setItem(\"accounts\",updatedarray);\n                                this.handletransaction(Number(add),this.state.id);\n                             }\n                        }\n                   else\n                        {\n                            alert(\"You deposited no amount\");\n                        }\n                }\n\n\n  render() {\n    return (\n      <div className=\"withdraw_c\">\n           <div><p>deposit into account</p></div>\n           <span>Amount to deposit</span>\n           <input type=\"number\" min=\"1\" ref=\"deposit\"/><br />\n           <span>Description(<small>optional</small>)</span>\n           <input type=\"text\" placeholder=\"description of transaction\" /><br/>\n           <span>\n                <Link to=\"/accounts/detail\" className=\"green\" onClick={this.deposit}>Deposit</Link>\n                <Link to=\"/accounts/detail\" className=\"red\">cancel</Link>\n            </span>\n      </div>\n    );\n  }\n}\n\nexport default Deposit;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n           <p>copyright &copy; 2018. All rights Reserved.</p>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\nimport Accounts from './components/Accounts';\nimport Transactions from './components/Transactions';\nimport Create from './components/Create';\n import Detail from './components/Detail';\n import Tdetail from './components/Tdetail';\n import Withdraw from './components/withdraw';\n import Deposit from './components/deposit';\nimport Footer from './components/Footer';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n              <Header />\n              <Route exact path='/' component={Dashboard} />\n              <Route exact path='/accounts' component={Accounts} />\n              <Route exact path='/accounts/detail' component={Detail} />\n              <Route exact path='/transactions/detail' component={Tdetail} />\n              <Route exact path='/accounts/withdraw' component={Withdraw} />\n              <Route exact path='/accounts/deposit' component={Deposit} />\n              <Route exact path='/accounts/create' component={Create} />\n              <Route exact path='/transactions' component={Transactions} />\n              <Footer />\n          </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}